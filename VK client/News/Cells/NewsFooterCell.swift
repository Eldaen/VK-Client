//
//  NewsFooterCell.swift
//  VK client
//
//  Created by –î–µ–Ω–∏—Å –°–∏–∑–æ–≤ on 20.12.2021.
//

import UIKit

/// –ü—Ä–æ—Ç–æ–∫–æ–ª —è—á–µ–π–∫–∏ —Ñ—É—Ç–µ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è NewsController
protocol NewsFooterCellType {
	
	/// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç —è—á–µ–π–∫—É –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
	func configure (with model: NewsTableViewCellModelType)
	
	/// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
	var likesResponder: NewsViewModelType? { get set }
}

/// –Ø—á–µ–π–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ NewsController
final class NewsFooterCell: UITableViewCell, NewsFooterCellType {

	private let footerView: UIView = {
		let view = UIView()
		view.translatesAutoresizingMaskIntoConstraints = false
		return view
	}()
	
	private let footerHorizontalStack: UIStackView = {
		let stack = UIStackView()
		stack.axis = .horizontal
		stack.distribution = .equalSpacing
		stack.contentMode = .center
		stack.translatesAutoresizingMaskIntoConstraints = false
		return stack
	}()
	
	private let likesControl: LikeControl = {
		let likeControl = LikeControl(frame: .zero)
		likeControl.tintColor = .red
		return likeControl
	}()
	
	private let viewsLabel: UILabel = {
		let views = UILabel()
		views.font = UIFont.systemFont(ofSize: 14)
		return views
	}()

	/// –ú–æ–¥–µ–ª—å –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
	private var model: NewsTableViewCellModelType?
	
	/// –í—å—é –º–æ–¥–µ–ª—å
	var likesResponder: NewsViewModelType?
	
	/// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç —è—á–µ–π–∫—É NewsTableViewCell
	/// - Parameters:
	///   - model: –ú–æ–¥–µ–ª—å –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
	func configure (with model: NewsTableViewCellModelType) {
		setupCell()
		setupFooter()
		setupConstraints()
		updateCellData(with: model)
		self.model = model
		
		selectionStyle = .none
		likesControl.setLikesResponder(responder: self)
	}
}

// MARK: - Private methods
private extension NewsFooterCell {
	
	func setupConstraints() {
		
		NSLayoutConstraint.activate([
			footerView.topAnchor.constraint(equalTo: contentView.bottomAnchor, constant: 20),
			footerView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 10),
			footerView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -10),
			footerView.bottomAnchor.constraint(equalTo: contentView.bottomAnchor),
			footerView.heightAnchor.constraint(equalToConstant: 30),
			
			footerHorizontalStack.widthAnchor.constraint(equalTo: footerView.widthAnchor),
		])
	}
	
	func setupCell() {
		contentView.addSubview(footerView)
	}
	
	/// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Ñ—É—Ç–µ—Ä
	func setupFooter() {
		footerHorizontalStack.addArrangedSubview(likesControl)
		footerHorizontalStack.addArrangedSubview(viewsLabel)
		footerView.addSubview(footerHorizontalStack)
	}
	
	/// –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
	func updateCellData(with model: NewsTableViewCellModelType) {
		likesControl.setLikes(with: model.likesModel?.count ?? 0)
		viewsLabel.text = "üîç \(model.views?.count ?? 0)"
	}
}

// MARK: - CanLike protocol extension

extension NewsFooterCell: CanLike {
	
	///  –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–∞–π–∫ –ø–æ—Å—Ç–∞
	func setLike() {
		if let id = model?.postID,
		   let ownerId = model?.source.id {
			likesResponder?.setLike(post: id, owner: ownerId) { [weak self] result in
				self?.likesControl.setLikes(with: result)
			}
		}
	}
	
	/// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –ª–∞–π–∫–∞
	func removeLike() {
		if let id = model?.postID,
		   let ownerId = model?.source.id {
			likesResponder?.setLike(post: id, owner: ownerId) { [weak self] result in
				self?.likesControl.setLikes(with: result)
			}
		}
	}
}
